/**
 * First-order logic revision exercises based on a simple model of a 
 * file system trash can.
 * 
 * The model has 3 unary predicates (sets): File, Trash, and
 * Protected, where Trash and Protected are subsets of File. There is also 
 * a binary predicate, link, which is a subset of File x File. 
 * These invariants explore constraints on files, their links, and 
 * relationships to trash and protection.
 * 
 * This complete Alloy model defines several invariants (predicates) to 
 * enforce logical constraints on the behavior and relationships of files, 
 * their links, and their status (e.g., protected, trashed). Each predicate 
 * describes a specific rule or restriction.
 **/

sig File {
  	/* A file may link to other files. */
	link : set File
}

sig Trash in File {}
sig Protected in File {}

/* The trash is empty. */
pred inv1 {
    no Trash
}

/* All files are deleted. */
pred inv2 {
    all f: File | f in Trash
}

/* Some file is deleted. */
pred inv3 {
    some f: File | f in Trash
}

/* Protected files cannot be deleted. */
pred inv4 {
    all f: Protected | f not in Trash
}

/* All unprotected files are deleted. */
pred inv5 {
    all f: File - Protected | f in Trash
}

/* A file links to at most one file. */
pred inv6 {
    all f: File | lone f.link
}

/* There is no deleted link. */
pred inv7 {
    all f: File | f.link not in Trash
}

/* There are no links. */
pred inv8 {
    no f: File | some f.link
}

/* A link does not link to another link. */
pred inv9 {
    all f: File | f.link & File.link = none
}

/* If a link is deleted, so is the file it links to. */
pred inv10 {
    all f: File | f in Trash implies f.link in Trash
}
